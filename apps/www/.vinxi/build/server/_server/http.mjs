import{H3Event as u,getRequestURL as _,getResponseStatus as v,getRequestWebStream as x}from"h3";import{AsyncLocalStorage as m}from"node:async_hooks";var S="Invariant failed";function I(t,e){if(!t)throw new Error(S)}function R(t={}){let e,o=!1;const r=n=>{if(e&&e!==n)throw new Error("Context conflict")};let s;if(t.asyncContext){const n=t.AsyncLocalStorage||globalThis.AsyncLocalStorage;n?s=new n:console.warn("[unctx] `AsyncLocalStorage` is not provided.")}const f=()=>{if(s&&e===void 0){const n=s.getStore();if(n!==void 0)return n}return e};return{use:()=>{const n=f();if(n===void 0)throw new Error("Context is not available");return n},tryUse:()=>f(),set:(n,a)=>{a||r(n),e=n,o=!0},unset:()=>{e=void 0,o=!1},call:(n,a)=>{r(n),e=n;try{return s?s.run(n,a):a()}finally{o||(e=void 0)}},async callAsync(n,a){e=n;const b=()=>{e=n},l=()=>e===n?b:void 0;y.add(l);try{const w=s?s.run(n,a):a();return o||(e=void 0),await w}finally{y.delete(l)}}}}function T(t={}){const e={};return{get(o,r={}){return e[o]||(e[o]=R({...t,...r})),e[o]}}}const i=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof global<"u"?global:typeof window<"u"?window:{},d="__unctx__",q=i[d]||(i[d]=T()),C=(t,e={})=>q.get(t,e),g="__unctx_async_handlers__",y=i[g]||(i[g]=new Set);function E(t){let e;const o=h(t),r={duplex:"half",method:t.method,headers:t.headers};return t.node.req.body instanceof ArrayBuffer?new Request(o,{...r,body:t.node.req.body}):new Request(o,{...r,get body(){return e||(e=W(t),e)}})}function A(t){return t.web??={request:E(t),url:h(t)},t.web.request}function L(){return U()}const p=Symbol("$HTTPEvent");function H(t){return typeof t=="object"&&(t instanceof u||t?.[p]instanceof u||t?.__is_event__===!0)}function c(t){return function(...e){let o=e[0];if(H(o))e[0]=o instanceof u||o.__is_event__?o:o[p];else{if(!globalThis.app.config.server.experimental?.asyncContext)throw new Error("AsyncLocalStorage was not enabled. Use the `server.experimental.asyncContext: true` option in your app configuration to enable it. Or, pass the instance of HTTPEvent that you have as the first argument to the function.");if(o=L(),!o)throw new Error("No HTTPEvent found in AsyncLocalStorage. Make sure you are using the function within the server runtime.");e.unshift(o)}return t(...e)}}const h=c(_),K=c(v),W=c(x),B=c(A);function P(){return C("nitro-app",{asyncContext:!!globalThis.app.config.server.experimental?.asyncContext,AsyncLocalStorage:m})}function U(){return P().use().event}export{U as a,B as b,K as g,I as i,A as t};
