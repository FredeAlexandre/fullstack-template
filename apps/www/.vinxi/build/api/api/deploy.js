import{a as v}from"./assets/index-BjcKa2sk.js";import{createWalletClient as h,http as b,publicActions as w,keccak256 as A,toHex as T}from"viem";import{hardhat as x}from"viem/chains";import{z as o}from"zod";import{mnemonicToAccount as g}from"viem/accounts";import"h3";import"node:async_hooks";function C(e){return e instanceof Headers?new Headers(e):Array.isArray(e)?new Headers(e):typeof e=="object"?new Headers(e):new Headers}function B(...e){return e.reduce((t,r)=>{const d=C(r);for(const[s,n]of d.entries())t.set(s,n);return t},new Headers)}function i(e,t){return new Response(JSON.stringify(e),{...t,headers:B({"content-type":"application/json"},t?.headers)})}const p=[{inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"contract Authority",name:"_authority",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"contract Authority",name:"newAuthority",type:"address"}],name:"AuthorityUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{inputs:[],name:"authority",outputs:[{internalType:"contract Authority",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"salt",type:"bytes32"},{internalType:"bytes",name:"creationCode",type:"bytes"}],name:"deploy",outputs:[{internalType:"address",name:"deployed",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"salt",type:"bytes32"}],name:"getDeployed",outputs:[{internalType:"address",name:"deployed",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract Authority",name:"newAuthority",type:"address"}],name:"setAuthority",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"}],H=[31337,421614],M={1:void 0,31337:"0xa1dA2140118a95Fa52379277C125087646B8BDff",10:void 0,137:void 0,42161:void 0,421614:void 0,42220:void 0,43114:void 0,480:void 0,534352:void 0,56:void 0,59144:void 0,7777777:void 0,81457:void 0,8453:void 0},_={1:void 0,31337:"0xA7c9Ac0FD26A3B4A35f2bb1fBd46Ec082Be31A54",10:void 0,137:void 0,42161:void 0,421614:void 0,42220:void 0,43114:void 0,480:void 0,534352:void 0,56:void 0,59144:void 0,7777777:void 0,81457:void 0,8453:void 0},k=0,I=e=>g(e,{addressIndex:k}),O=e=>e.startsWith("0x"),j=e=>H.includes(e),q=o.object({salt:o.string().min(1,"salt est requis"),creationCode:o.string().min(1,"creationCode est requis").refine(O),blockchain:o.number().refine(j,{message:"Blockchain not supported"})});async function N({request:e,schema:t}){try{return t.safeParse(await e.json())}catch{return t.safeParse({})}}const z=v("/api/deploy")({GET:async({request:e})=>{const t=await N({request:e,schema:q});if(!t.success)return i({error:t.error},{status:400});const{salt:r,creationCode:d,blockchain:s}=t.data,n=M[s],y=_[s];if(!n||!y)return i({error:"Internal error the blockchain is not fully implemented please contact admin"},{status:400});try{const a=I(process.env.MNEMONIC),c=h({account:a,chain:x,transport:b()}).extend(w),u=A(T(r)),{request:l}=await c.simulateContract({account:a,address:n,abi:p,functionName:"deploy",args:[u,d]}),m=await c.writeContract(l),f=await c.readContract({address:n,abi:p,functionName:"getDeployed",args:[u]});return i({target_address:f,tx_hash:m})}catch(a){return console.log(a),i({error:"Erreur interne"},{status:500})}}});export{z as APIRoute};
